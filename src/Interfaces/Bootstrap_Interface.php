<?php

/**
 * Интерфейс точки инициализации ядра проекта.
 *
 * Этот файл содержит описание контракта на выполнение инициализации ядра:
 * - Проверка WORK_DIR
 * - Проверка наличия обязательных файлов
 * - Подключение системных компонентов
 * - Выброс исключений при ошибках инициализации
 *
 * @package    PhotoRigma\Interfaces
 * @subpackage Bootstrap_Interface
 * @author     Dark Dayver
 * @version    0.5.0
 * @since      2025-05-15
 *
 * @note       Прямой вызов файла запрещён — используется только через точку входа index.php
 * @note       Все реализации должны выбрасывать RuntimeException при ошибках
 *
 * @warning    Нарушение контракта может привести к фатальным последствиям:
 *             - Ошибки инициализации
 *             - Потеря данных
 *             - Нарушение безопасности
 *
 * Пример использования:
 * \PhotoRigma\Classes\Bootstrap::init();
 *
 * @copyright Copyright (c) 2008–2025 Dark Dayver. Все права защищены.
 * @license   MIT License {@link https://opensource.org/licenses/MIT}
 *            Разрешается использовать, копировать, изменять, объединять, публиковать,
 *            распространять, сублицензировать и продавать копии программного обеспечения,
 *            а также разрешать лицам, которым предоставляется данное программное обеспечение,
 *            делать это при соблюдении следующих условий:
 *            - Уведомление об авторских правах и условия лицензии должны быть включены во все
 *              копии или значимые части программного обеспечения.
 */

namespace PhotoRigma\Interfaces;

use RuntimeException;

// Предотвращение прямого вызова файла
if (!defined('IN_GALLERY') || IN_GALLERY !== true) {
    error_log(
        date('H:i:s') . ' [ERROR] | ' . (filter_input(
            INPUT_SERVER,
            'REMOTE_ADDR',
            FILTER_VALIDATE_IP
        ) ?: 'UNKNOWN_IP') . ' | ' . __FILE__ . ' | Попытка прямого вызова файла'
    );
    die('HACK!');
}

/**
 * @interface Bootstrap_Interface
 *
 * Интерфейс точки инициализации ядра проекта.
 *
 * Этот интерфейс определяет контракт на выполнение:
 * - Проверка WORK_DIR и обязательных файлов
 * - Подключение системных компонентов
 * - Выброс исключений при ошибках
 *
 * @note       Реализация должна быть совместима с PSR-4 и PSR-12
 * @note       init() должен вызываться один раз — при запуске приложения
 *
 * @warning    Все реализации обязаны выбрасывать RuntimeException при ошибках.
 *             Нарушение контракта может привести к фатальным последствиям.
 */
interface Bootstrap_Interface
{
    /**
     * Выполняет инициализацию ядра проекта.
     *
     * Метод обязывает реализацию:
     * - Проверить наличие WORK_DIR
     * - Проверить существование и доступность системных файлов
     * - Подключить конфигурацию, константы, функции и сессию
     * - Выбросить исключение при ошибках инициализации
     *
     * @throws RuntimeException Если WORK_DIR не определена
     * @throws RuntimeException Если один из файлов отсутствует или недоступен
     *
     * @note    init() должен быть статическим
     * @note    Не допускается прямое выполнение вне точки входа
     *
     * @warning Нарушение контракта может привести к фатальным последствиям:
     *          - Ошибки инициализации
     *          - Потеря данных
     *          - Нарушение безопасности
     *
     * Пример использования:
     * \PhotoRigma\Classes\Bootstrap::init();
     */
    public static function init(): void;
}
